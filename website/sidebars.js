function getApiItems(label, source, types) {
  return [
    {
      type: 'doc',
      id: `api/${source}/index`,
      label: 'Table of contents'
    },
    ...types.map((type) => ({
      type: 'category',
      label: `${type[0].toUpperCase()}${type.slice(1)}`,
      items: [
        {
          type: 'autogenerated',
          dirName: `api/${source}/${type}`,
        },
      ],
    })),
  ];
}

module.exports = {
  docsSidebar: [
    {
      type: 'category',
      label: 'Documentation',
      items: [
        'about',
        'getting-started',
        'known-issues',
        {
          type: 'category',
          label: 'Code Splitting',
          items: [
            'code-splitting/concepts',
            'code-splitting/usage',
            'code-splitting/glossary',
            'code-splitting/guide-async-chunks',
            'code-splitting/caching-versioning',
            'code-splitting/react-navigation',
            'code-splitting/code-push',
          ],
        },
        {
          type: 'category',
          label: 'Migration guides',
          items: ['migration-guides/repack-v1-to-v2'],
        },
      ],
    },
  ],
  configuration: [
    {
      type: 'category',
      label: 'Configuration',
      items: ['configuration/webpack-config'],
    },
    {
      type: 'category',
      label: 'Loaders',
      items: ['configuration/loaders/assets-loader'],
    },
    {
      type: 'category',
      label: 'Guides',
      items: ['configuration/guides/svg'],
    },
    {
      type: 'category',
      label: 'Functions',
      items: [
        'api/repack/functions/getAssetExtensionsRegExp',
        'api/repack/functions/getInitializationEntries',
        'api/repack/functions/getPublicPath',
        'api/repack/functions/getResolveOptions',
      ].map((docId) => ({ type: 'ref', id: docId })),
    },
    {
      type: 'category',
      label: 'Webpack Plugins',
      items: [
        'api/repack/classes/AssetsPlugin',
        'api/repack/classes/AssetsResolverPlugin',
        'api/repack/classes/DevelopmentPlugin',
        'api/repack/classes/JavaScriptLooseModePlugin',
        'api/repack/classes/LoggerPlugin',
        'api/repack/classes/OutputPlugin',
        'api/repack/classes/TargetPlugin',
      ].map((docId) => ({ type: 'ref', id: docId })),
    },
  ],
  packagesSidebar: [{
    type: 'category',
    label: 'API',
    items: [
      'api/about', 
      {
        type: 'category',
        label: '@callstack/repack',
        items: getApiItems('@callstack/repack', 'repack', [
          'classes',
          'functions',
          'interfaces',
          'types',
          'variables'
        ])
      },
      {
        type: 'category',
        label: '@callstack/repack-dev-server',
        items: getApiItems('@callstack/repack-dev-server', 'dev-server', [
          'enums',
          'functions',
          'interfaces',
          'modules',
          'types',
        ])
      },
    ]
  }],
};
